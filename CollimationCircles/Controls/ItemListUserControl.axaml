<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:CollimationCircles.Controls"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="450"
             x:Class="CollimationCircles.Controls.ItemListUserControl"
             xmlns:vm="using:CollimationCircles.ViewModels"
             x:DataType="vm:SettingsViewModel">

  <ScrollViewer>
    <StackPanel
      Orientation="Vertical"
      Spacing="{DynamicResource ControlSpacing}">
      <Border
        Background="{DynamicResource ExpanderContentBackground}"
        BorderThickness="{DynamicResource ExpanderHeaderBorderThickness}"
        BorderBrush="{DynamicResource ExpanderContentBorderBrush}"
        CornerRadius="{DynamicResource ControlCornerRadius}"
        Padding="{DynamicResource ExpanderContentPadding}">
        <StackPanel
          Orientation="Vertical"
          Spacing="{DynamicResource ControlSpacing}">
          <StackPanel
            HorizontalAlignment="Stretch"
            Orientation="Vertical"
            Spacing="{DynamicResource ControlSpacing}">

            <controls:ToolbarUserControl/>

            <Border Height="160">
              <ScrollViewer>
                <ListBox
                  Name="list"
                  ItemsSource="{Binding Items}"
                  SelectedItem="{Binding SelectedItem}"
                  SelectedIndex="{Binding SelectedIndex}"
                  SelectionMode="Single">
                  <ListBox.ItemTemplate>
                    <DataTemplate>

                      <Grid
                        ColumnDefinitions="Auto,*,Auto"
                        RowDefinitions="Auto">

                        <StackPanel
                          Orientation="Horizontal"
                          Spacing="{DynamicResource ControlSpacing}">
                        <PathIcon
                          Width="{DynamicResource PathIconWidth}"
                          Height="{DynamicResource PathIconHeight}"
                          Foreground="{DynamicResource Color2}"
                          Data="{Binding ResourceString}"/>

                        <TextBlock
                          TextWrapping="Wrap"                          
                          VerticalAlignment="Center"
                          HorizontalAlignment="Stretch"
                          Background="{ReflectionBinding SelectedItem.ItemColor}"
                          Text="{Binding Label}" />
                        </StackPanel>

                        <StackPanel 
                          Grid.Column="3"
                          Orientation="Horizontal"
                          Spacing="{DynamicResource ControlSpacing}">
                          <Button
                            Theme="{DynamicResource ToolbarButton}"
                            Grid.Column="2"
                            Command="{ReflectionBinding $parent[ListBox].DataContext.RemoveItemCommand}"
                            CommandParameter="{Binding .}"
                            ToolTip.Tip="{DynamicResource Text.RemoveItem}">
                            <PathIcon
                              Width="{DynamicResource PathIconWidth}"
                              Height="{DynamicResource PathIconHeight}"
                              Foreground="{DynamicResource Color2}"
                              Data="{StaticResource IconData.Remove}"/>
                          </Button>

                          <ToggleButton
                            Theme="{DynamicResource ToolbarButton}"                          
                            IsChecked="{Binding IsVisible}"
                            ToolTip.Tip="{DynamicResource Text.ItemVisibility}">
                            <ToggleButton.Styles>
                              <Style Selector="ToggleButton PathIcon.visibility-on">
                                <Setter Property="IsVisible" Value="False"/>
                              </Style>
                              <Style Selector="ToggleButton:checked PathIcon.visibility-on">
                                <Setter Property="IsVisible" Value="True"/>
                              </Style>
                              <Style Selector="ToggleButton PathIcon.visibility-off">
                                <Setter Property="IsVisible" Value="True"/>
                              </Style>
                              <Style Selector="ToggleButton:checked PathIcon.visibility-off">
                                <Setter Property="IsVisible" Value="False"/>
                              </Style>
                            </ToggleButton.Styles>
                            <Panel>
                              <PathIcon
                                Width="{DynamicResource PathIconWidth}"
                                Height="{DynamicResource PathIconHeight}"
                                Classes="visibility-on"
                                Data="{StaticResource IconData.Visible}" />
                              <PathIcon
                                Width="{DynamicResource PathIconWidth}"
                                Height="{DynamicResource PathIconHeight}"
                                Classes="visibility-off"
                                Data="{StaticResource IconData.Hidden}" />
                            </Panel>
                          </ToggleButton>
                        </StackPanel>

                      </Grid>

                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </ScrollViewer>
            </Border>
          </StackPanel>

        </StackPanel>

      </Border>

      <Expander Header="{DynamicResource Text.ShapeProperties}"
        VerticalAlignment="Top"
        HorizontalAlignment="Stretch"
        IsExpanded="{Binding ShapePropertiesExpanded}">
        <StackPanel Spacing="{DynamicResource ControlSpacing}">

          <UniformGrid
            Columns="2">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Color}" />
            <ComboBox
              HorizontalAlignment="Right"
              SelectedItem="{ReflectionBinding #list.SelectedItem.ItemColor}"
              ItemsSource="{Binding ColorList}">
              <ComboBox.ItemTemplate>
                <DataTemplate DataType="Color">
                  <Border
                    HorizontalAlignment="Left"
                    CornerRadius="4"
                    Width="16"
                    Height="16"
                    BorderThickness="1" >
                    <Border.Background>
                      <SolidColorBrush Color="{Binding}" />
                    </Border.Background>
                  </Border>
                </DataTemplate>
              </ComboBox.ItemTemplate>
            </ComboBox>
          </UniformGrid>

          <UniformGrid
            Columns="2">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Radius}"/>
            <NumericUpDown
              Increment="1"
              Value="{ReflectionBinding #list.SelectedItem.Radius}"
              Minimum="{Binding RadiusMin}"
              Maximum="{Binding RadiusMax}"/>
          </UniformGrid>

          <UniformGrid
            Columns="2">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Thickness}" />
            <NumericUpDown
              Increment="1"
              Value="{ReflectionBinding #list.SelectedItem.Thickness}"
              Minimum="{Binding ThicknessMin}"
              Maximum="{Binding ThicknessMax}"/>
          </UniformGrid>

          <UniformGrid
            Columns="2"
            IsVisible="{ReflectionBinding #list.SelectedItem.IsRotatable}">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Rotation}"/>
            <NumericUpDown
              Increment="{ReflectionBinding #list.SelectedItem.RotationIncrement}"
              Value="{ReflectionBinding #list.SelectedItem.RotationAngle}"
              Minimum="{Binding RotationAngleMin}"
              Maximum="{Binding RotationAngleMax}"/>
          </UniformGrid>

          <UniformGrid
            Columns="2"
            IsVisible="{ReflectionBinding #list.SelectedItem.IsInclinatable}">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.InclinationAngle}"/>
            <NumericUpDown
              Increment="{ReflectionBinding #list.SelectedItem.InclinationIncrement}"
              Value="{ReflectionBinding #list.SelectedItem.InclinationAngle}"
              Minimum="{Binding InclinationAngleMin}"
              Maximum="{Binding InclinationAngleMax}"/>
          </UniformGrid>

          <UniformGrid
            Columns="2"
            IsVisible="{ReflectionBinding #list.SelectedItem.IsSizeable}">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Spacing}"/>
            <NumericUpDown
              Increment="1"
              Value="{ReflectionBinding #list.SelectedItem.Size}"
              Minimum="{Binding SpacingMin}"
              Maximum="{Binding SpacingMax}" />
          </UniformGrid>

          <UniformGrid
            Columns="2"
            IsVisible="{ReflectionBinding #list.SelectedItem.IsCountable}">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Count}"/>
            <NumericUpDown
              Increment="1"
              Value="{ReflectionBinding #list.SelectedItem.Count}"
              Minimum="{Binding CountMin}"
              Maximum="{ReflectionBinding #list.SelectedItem.MaxCount}" />
          </UniformGrid>

          <UniformGrid
            Columns="2">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.SelectedOpacity}"/>
            <NumericUpDown
              Increment="0.1"
              Value="{ReflectionBinding #list.SelectedItem.Opacity}"
              Minimum="{Binding OpacityMin}"
              Maximum="{Binding OpacityMax}" />
          </UniformGrid>

          <UniformGrid
            Columns="2"
            IsVisible="{ReflectionBinding #list.SelectedItem.IsEditable}">
            <TextBlock
              VerticalAlignment="Bottom"
              Text="{DynamicResource Text.Label}"/>
            <TextBox
              TextWrapping="Wrap"
              MaxLength="20"
              Watermark="{DynamicResource Text.HelperName}"
              Text="{ReflectionBinding #list.SelectedItem.Label}" />
          </UniformGrid>

          <CheckBox
            Content="{DynamicResource Text.ShowLabels}"
            IsChecked="{Binding ShowLabels}"/>

        </StackPanel>

      </Expander>

      <Expander
            VerticalAlignment="Top"
            HorizontalAlignment="Stretch"
            Header="{DynamicResource Text.ProfileManagerTitle}"
            IsExpanded="{Binding ProfileManagerExpanded}">
        <StackPanel Orientation="Vertical">
          <controls:ProfileManagerUserControl/>
        </StackPanel>
      </Expander>
    </StackPanel>
  </ScrollViewer>
</UserControl>
